[{"C:\\Users\\David\\Dropbox\\Dev\\RegisterandLogin\\reactClient\\src\\index.js":"1","C:\\Users\\David\\Dropbox\\Dev\\RegisterandLogin\\reactClient\\src\\App.js":"2","C:\\Users\\David\\Dropbox\\Dev\\RegisterandLogin\\reactClient\\src\\components\\Navbar.js":"3","C:\\Users\\David\\Dropbox\\Dev\\RegisterandLogin\\reactClient\\src\\components\\Dashboard.js":"4","C:\\Users\\David\\Dropbox\\Dev\\RegisterandLogin\\reactClient\\src\\components\\Login.js":"5","C:\\Users\\David\\Dropbox\\Dev\\RegisterandLogin\\reactClient\\src\\components\\Register.js":"6","C:\\Users\\David\\Dropbox\\Dev\\RegisterandLogin\\reactClient\\src\\components\\Post.js":"7"},{"size":308,"mtime":1652408361878,"results":"8","hashOfConfig":"9"},{"size":23022,"mtime":1672255697438,"results":"10","hashOfConfig":"9"},{"size":3524,"mtime":1652987930017,"results":"11","hashOfConfig":"9"},{"size":3282,"mtime":1652987204934,"results":"12","hashOfConfig":"9"},{"size":2448,"mtime":1652899088407,"results":"13","hashOfConfig":"9"},{"size":3756,"mtime":1652899086850,"results":"14","hashOfConfig":"9"},{"size":4988,"mtime":1672107165054,"results":"15","hashOfConfig":"9"},{"filePath":"16","messages":"17","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},"49titc",{"filePath":"19","messages":"20","errorCount":0,"fatalErrorCount":0,"warningCount":12,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"21","messages":"22","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},{"filePath":"23","messages":"24","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"25","usedDeprecatedRules":"18"},{"filePath":"26","messages":"27","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},{"filePath":"28","messages":"29","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},{"filePath":"30","messages":"31","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"32","usedDeprecatedRules":"18"},"C:\\Users\\David\\Dropbox\\Dev\\RegisterandLogin\\reactClient\\src\\index.js",[],["33","34"],"C:\\Users\\David\\Dropbox\\Dev\\RegisterandLogin\\reactClient\\src\\App.js",["35","36","37","38","39","40","41","42","43","44","45","46"],"C:\\Users\\David\\Dropbox\\Dev\\RegisterandLogin\\reactClient\\src\\components\\Navbar.js",[],"C:\\Users\\David\\Dropbox\\Dev\\RegisterandLogin\\reactClient\\src\\components\\Dashboard.js",["47"],"/* eslint-disable react-hooks/exhaustive-deps */\r\nimport React, { useState, useEffect } from \"react\";\r\nimport axios from \"axios\";\r\nimport jwt_decode from \"jwt-decode\";\r\nimport { useHistory } from \"react-router-dom\";\r\n\r\nconst Dashboard = props => {\r\n  const [name, setName] = useState(\"\");\r\n  const [token, setToken] = useState(\"\");\r\n  const [expire, setExpire] = useState(\"\");\r\n  const [users, setUsers] = useState([]);\r\n  const history = useHistory();\r\n\r\n  useEffect(() => {\r\n    refreshToken();\r\n    getUsers();\r\n  }, []);\r\n\r\n  const refreshToken = async () => {\r\n    try {\r\n      const response = await axios.get(\"http://localhost:5000/token\");\r\n      setToken(response.data.accessToken);\r\n      const decoded = jwt_decode(response.data.accessToken);\r\n      // @ts-ignore\r\n      setName(decoded.name);\r\n      // @ts-ignore\r\n      setExpire(decoded.exp);\r\n    } catch (error) {\r\n      if (error.response) {\r\n        history.push(\"/\");\r\n        history.go(0);\r\n      }\r\n    }\r\n  };\r\n\r\n  const axiosJWT = axios.create();\r\n\r\n  axiosJWT.interceptors.request.use(\r\n    async (config) => {\r\n      const currentDate = new Date();\r\n      // @ts-ignore\r\n      if (expire * 1000 < currentDate.getTime()) {\r\n        const response = await axios.get(\"http://localhost:5000/token\");\r\n        config.headers.Authorization = `Bearer ${response.data.accessToken}`;\r\n        setToken(response.data.accessToken);\r\n        const decoded = jwt_decode(response.data.accessToken);\r\n        // @ts-ignore\r\n        setName(decoded.name);\r\n        // @ts-ignore\r\n        setExpire(decoded.exp);\r\n      }\r\n      return config;\r\n    },\r\n    (error) => {\r\n      return Promise.reject(error);\r\n    }\r\n  );\r\n\r\n  const getUsers = async () => {\r\n    const response = await axiosJWT.get(\"http://localhost:5000/users\", {\r\n      headers: {\r\n        Authorization: `Bearer ${token}`,\r\n      },\r\n    });\r\n    setUsers(response.data);\r\n  };\r\n\r\n  return (\r\n    <div className=\"container mt-6\">\r\n      <div className=\"columns is-vcentered\">\r\n        <div className=\"column is-8\">\r\n          <h1>Welcome Back: {name}</h1>\r\n        </div>\r\n        <div className=\"column is-right\">\r\n          <button\r\n            className=\"button is-primary is-pulled-right new-board-btn\"\r\n            onClick={(e) => {\r\n              e.preventDefault();\r\n              if (props.isActive) props.setActive(!props.isActive);\r\n            }}\r\n          >\r\n            New Board\r\n          </button>\r\n        </div>\r\n      </div>\r\n\r\n      {/* <button onClick={getUsers} classNameName=\"button is-info\">Get Users</button>\r\n            <table classNameName=\"table is-striped is-fullwidth\">\r\n                <thead>\r\n                    <tr>\r\n                        <th>No</th>\r\n                        <th>Name</th>\r\n                        <th>Email</th>\r\n                    </tr>\r\n                </thead>\r\n                <tbody>\r\n                    {users.map((user, index) => (\r\n                        <tr key={user.id}>\r\n                            <td>{index + 1}</td>\r\n                            <td>{user.name}</td>\r\n                            <td>{user.email}</td>\r\n                        </tr>\r\n                    ))}\r\n\r\n                </tbody>\r\n            </table> */}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Dashboard;\r\n","C:\\Users\\David\\Dropbox\\Dev\\RegisterandLogin\\reactClient\\src\\components\\Login.js",[],"C:\\Users\\David\\Dropbox\\Dev\\RegisterandLogin\\reactClient\\src\\components\\Register.js",[],"C:\\Users\\David\\Dropbox\\Dev\\RegisterandLogin\\reactClient\\src\\components\\Post.js",["48","49","50"],"import axios from \"axios\";\r\nimport React, { useState } from \"react\";\r\n\r\nconst Post = (props) => {\r\n  const [file, setFile] = useState('');\r\n  const [filename, setFilename] = useState('Choose File 2');\r\n  const [uploadedFile, setUploadedFile] = useState({});\r\n  const [message, setMessage] = useState('');\r\n  const [uploadPercentage, setUploadPercentage] = useState(0);\r\n  const [postText, setPostText] = useState(\"\");\r\n  // const [boardId, setBoardId] = useState(\"\");\r\n\r\n\r\n  const onChange = e => {\r\n    setFile(e.target.files[0]);\r\n    // setFilename(e.target.files[0].name);\r\n    setFilename(e.target.files[0].name);\r\n    props.setFile(e.target.files[0]);\r\n    // props.setFilename(e.target.files[0].name);\r\n    props.setFilename(e.target.files[0].name);\r\n  };\r\n\r\n  const onSubmit = async e => {\r\n    e.preventDefault();\r\n    const formData = new FormData();\r\n    formData.append('file', file);\r\n    formData.append('postText', postText);\r\n    formData.append('boardId', props.boardId);\r\n\r\n    try {\r\n      const res = await axios.post('http://localhost:5000/upload', formData, {\r\n        headers: {\r\n          'Content-Type': 'multipart/form-data'\r\n        },\r\n        onUploadProgress: progressEvent => {\r\n          setUploadPercentage(parseInt(Math.round((progressEvent.loaded * 100) / progressEvent.total)));\r\n          setTimeout(() => setUploadPercentage(0), 10000);\r\n        }\r\n      });\r\n\r\n      const { fileName, filePath } = res.data;\r\n      setUploadedFile({ fileName, filePath });\r\n      setMessage('File uploaded');\r\n\r\n    } catch(err) {\r\n      if(err.response.status === 500) {\r\n        setMessage('There was a problem with the server');\r\n      } else {\r\n        setMessage(err.response.data.msg);\r\n      }\r\n    }\r\n  }\r\n\r\n  return (\r\n    // {/* create a new post */}\r\n    <div\r\n      className={props.isActivePost ? \"hero-body hide\" : \"hero-body post-panel\"}\r\n    >\r\n      <div className=\"mask\">\r\n        <form onSubmit={onSubmit} className=\"box\">\r\n          <article className=\"message is-white\">\r\n            <div className=\"message-header\" style={{ padding: \"0\" }}>\r\n              <h2>Add a post</h2>\r\n              {/* delete button */}\r\n              <button\r\n                className=\"delete\"\r\n                onClick={(e) => {\r\n                  e.preventDefault();\r\n                  console.log(props.isActivePost);\r\n                  props.togglePost();\r\n                }}\r\n              ></button>\r\n            </div>\r\n            \r\n            <div className=\"custom-file mb-4\">\r\n\r\n              <input\r\n                type=\"file\"\r\n                className=\"custom-file-input\"\r\n                id=\"customFile\"\r\n                onChange={onChange}\r\n              />\r\n              <label className='custom-file-label' htmlFor='customFile'>\r\n                {filename}\r\n              </label>\r\n            </div>\r\n\r\n            {/* <input\r\n              type=\"submit\"\r\n              value=\"Upload\"\r\n              className=\"btn btn-primary btn-block mt-4\"\r\n            /> */}\r\n\r\n            {/* <button\r\n              className=\"button is-primary\"\r\n              onClick={(e) => {\r\n                e.preventDefault();\r\n                props.addPost();\r\n                props.togglePost();\r\n              }}\r\n              >\r\n                Add Image\r\n            </button> */}\r\n          </article>\r\n\r\n          \r\n          <p className=\"has-text-centered\">{null}</p>\r\n          <div className=\"field is-hotizontal mt-5\">\r\n            <div className=\"field-body\">\r\n              <div className=\"field\">\r\n                <p className=\"control is-expanded left\">\r\n                  <textarea\r\n                    style={{ height: \"250px\", width: \"400px\" }}\r\n                    className=\"input\"\r\n                    placeholder=\"\"\r\n                    onChange={(event) => {\r\n                      props.setPostText(event.target.value);\r\n                      setPostText(event.target.value);\r\n                    }}\r\n                    required\r\n                  />\r\n                </p>\r\n              </div>\r\n            </div>\r\n\r\n            {/* Post button */}\r\n            <div className=\"field mt-4\">\r\n              <div className=\"field-body\">\r\n                <div className=\"field\">\r\n                  <div className=\"control is-expanded\">\r\n                    <input\r\n                      type=\"submit\"\r\n                      value=\"Post\"\r\n                      className=\"button is-fullwidth is-primary\"\r\n                      onClick={(e) => {\r\n                        // e.preventDefault();\r\n                        // setBoardId(\"81\");\r\n                        // props.addPost();\r\n                        props.togglePost();\r\n                        // props.getBoards();\r\n                      }}\r\n                    >\r\n                    </input>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </form>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Post;\r\n",{"ruleId":"51","replacedBy":"52"},{"ruleId":"53","replacedBy":"54"},{"ruleId":"55","severity":1,"message":"56","line":16,"column":9,"nodeType":"57","messageId":"58","endLine":16,"endColumn":16},{"ruleId":"55","severity":1,"message":"59","line":31,"column":10,"nodeType":"57","messageId":"58","endLine":31,"endColumn":16},{"ruleId":"55","severity":1,"message":"60","line":38,"column":10,"nodeType":"57","messageId":"58","endLine":38,"endColumn":26},{"ruleId":"55","severity":1,"message":"61","line":38,"column":28,"nodeType":"57","messageId":"58","endLine":38,"endColumn":47},{"ruleId":"55","severity":1,"message":"62","line":40,"column":10,"nodeType":"57","messageId":"58","endLine":40,"endColumn":22},{"ruleId":"55","severity":1,"message":"63","line":44,"column":10,"nodeType":"57","messageId":"58","endLine":44,"endColumn":18},{"ruleId":"55","severity":1,"message":"64","line":45,"column":10,"nodeType":"57","messageId":"58","endLine":45,"endColumn":22},{"ruleId":"55","severity":1,"message":"65","line":45,"column":24,"nodeType":"57","messageId":"58","endLine":45,"endColumn":39},{"ruleId":"55","severity":1,"message":"66","line":99,"column":9,"nodeType":"57","messageId":"58","endLine":99,"endColumn":19},{"ruleId":"55","severity":1,"message":"67","line":167,"column":9,"nodeType":"57","messageId":"58","endLine":167,"endColumn":20},{"ruleId":"68","severity":1,"message":"69","line":359,"column":37,"nodeType":"70","endLine":364,"endColumn":38},{"ruleId":"68","severity":1,"message":"69","line":369,"column":37,"nodeType":"70","endLine":372,"endColumn":38},{"ruleId":"55","severity":1,"message":"71","line":11,"column":10,"nodeType":"57","messageId":"58","endLine":11,"endColumn":15},{"ruleId":"55","severity":1,"message":"64","line":7,"column":10,"nodeType":"57","messageId":"58","endLine":7,"endColumn":22},{"ruleId":"55","severity":1,"message":"72","line":8,"column":10,"nodeType":"57","messageId":"58","endLine":8,"endColumn":17},{"ruleId":"55","severity":1,"message":"73","line":9,"column":10,"nodeType":"57","messageId":"58","endLine":9,"endColumn":26},"no-native-reassign",["74"],"no-negated-in-lhs",["75"],"no-unused-vars","'history' is assigned a value but never used.","Identifier","unusedVar","'sorted' is assigned a value but never used.","'newlyUpdatedText' is assigned a value but never used.","'setNewlyUpdatedText' is assigned a value but never used.","'postAreaText' is assigned a value but never used.","'filename' is assigned a value but never used.","'uploadedFile' is assigned a value but never used.","'setUploadedFile' is assigned a value but never used.","'toggleSort' is assigned a value but never used.","'deleteBoard' is assigned a value but never used.","jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","'users' is assigned a value but never used.","'message' is assigned a value but never used.","'uploadPercentage' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]