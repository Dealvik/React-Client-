{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\David\\\\Dropbox\\\\Dev\\\\RegisterandLogin\\\\reactClient\\\\src\\\\components\\\\Dashboard.js\",\n    _s = $RefreshSig$();\n\n/* eslint-disable react-hooks/exhaustive-deps */\nimport React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport jwt_decode from \"jwt-decode\";\nimport { useHistory } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Dashboard = () => {\n  _s();\n\n  const [name, setName] = useState(\"\");\n  const [token, setToken] = useState(\"\");\n  const [expire, setExpire] = useState(\"\");\n  const [users, setUsers] = useState([]);\n  const history = useHistory();\n  useEffect(() => {\n    refreshToken();\n    getUsers();\n  }, []);\n\n  const refreshToken = async () => {\n    try {\n      const response = await axios.get(\"http://localhost:5000/token\");\n      setToken(response.data.accessToken);\n      const decoded = jwt_decode(response.data.accessToken); // @ts-ignore\n\n      setName(decoded.name); // @ts-ignore\n\n      setExpire(decoded.exp);\n    } catch (error) {\n      if (error.response) {\n        history.push(\"/\");\n        history.go(0);\n      }\n    }\n  };\n\n  const axiosJWT = axios.create();\n  axiosJWT.interceptors.request.use(async config => {\n    const currentDate = new Date(); // @ts-ignore\n\n    if (expire * 1000 < currentDate.getTime()) {\n      const response = await axios.get(\"http://localhost:5000/token\");\n      config.headers.Authorization = `Bearer ${response.data.accessToken}`;\n      setToken(response.data.accessToken);\n      const decoded = jwt_decode(response.data.accessToken); // @ts-ignore\n\n      setName(decoded.name); // @ts-ignore\n\n      setExpire(decoded.exp);\n    }\n\n    return config;\n  }, error => {\n    return Promise.reject(error);\n  });\n\n  const getUsers = async () => {\n    const response = await axiosJWT.get(\"http://localhost:5000/users\", {\n      headers: {\n        Authorization: `Bearer ${token}`\n      }\n    });\n    setUsers(response.data);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container mt-6\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"columns is-vcentered\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"column is-8\",\n        children: /*#__PURE__*/_jsxDEV(\"h1\", {\n          children: [\"Welcome Back: \", name]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"column is-right\",\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"button is-primary is-pulled-right new-board-btn\",\n          onClick: e => {\n            e.preventDefault(); // if (isActive) toggleclassName();\n          },\n          children: \"New Board\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 69,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Dashboard, \"1dC8ypTn6RgRF7V/i55PgCc3V6w=\", false, function () {\n  return [useHistory];\n});\n\n_c = Dashboard;\nexport default Dashboard;\n\nvar _c;\n\n$RefreshReg$(_c, \"Dashboard\");","map":{"version":3,"sources":["C:/Users/David/Dropbox/Dev/RegisterandLogin/reactClient/src/components/Dashboard.js"],"names":["React","useState","useEffect","axios","jwt_decode","useHistory","Dashboard","name","setName","token","setToken","expire","setExpire","users","setUsers","history","refreshToken","getUsers","response","get","data","accessToken","decoded","exp","error","push","go","axiosJWT","create","interceptors","request","use","config","currentDate","Date","getTime","headers","Authorization","Promise","reject","e","preventDefault"],"mappings":"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","sourcesContent":["/* eslint-disable react-hooks/exhaustive-deps */\r\nimport React, { useState, useEffect } from \"react\";\r\nimport axios from \"axios\";\r\nimport jwt_decode from \"jwt-decode\";\r\nimport { useHistory } from \"react-router-dom\";\r\n\r\nconst Dashboard = () => {\r\n  const [name, setName] = useState(\"\");\r\n  const [token, setToken] = useState(\"\");\r\n  const [expire, setExpire] = useState(\"\");\r\n  const [users, setUsers] = useState([]);\r\n  const history = useHistory();\r\n\r\n  useEffect(() => {\r\n    refreshToken();\r\n    getUsers();\r\n  }, []);\r\n\r\n  const refreshToken = async () => {\r\n    try {\r\n      const response = await axios.get(\"http://localhost:5000/token\");\r\n      setToken(response.data.accessToken);\r\n      const decoded = jwt_decode(response.data.accessToken);\r\n      // @ts-ignore\r\n      setName(decoded.name);\r\n      // @ts-ignore\r\n      setExpire(decoded.exp);\r\n    } catch (error) {\r\n      if (error.response) {\r\n        history.push(\"/\");\r\n        history.go(0);\r\n      }\r\n    }\r\n  };\r\n\r\n  const axiosJWT = axios.create();\r\n\r\n  axiosJWT.interceptors.request.use(\r\n    async (config) => {\r\n      const currentDate = new Date();\r\n      // @ts-ignore\r\n      if (expire * 1000 < currentDate.getTime()) {\r\n        const response = await axios.get(\"http://localhost:5000/token\");\r\n        config.headers.Authorization = `Bearer ${response.data.accessToken}`;\r\n        setToken(response.data.accessToken);\r\n        const decoded = jwt_decode(response.data.accessToken);\r\n        // @ts-ignore\r\n        setName(decoded.name);\r\n        // @ts-ignore\r\n        setExpire(decoded.exp);\r\n      }\r\n      return config;\r\n    },\r\n    (error) => {\r\n      return Promise.reject(error);\r\n    }\r\n  );\r\n\r\n  const getUsers = async () => {\r\n    const response = await axiosJWT.get(\"http://localhost:5000/users\", {\r\n      headers: {\r\n        Authorization: `Bearer ${token}`,\r\n      },\r\n    });\r\n    setUsers(response.data);\r\n  };\r\n\r\n  return (\r\n    <div className=\"container mt-6\">\r\n      <div className=\"columns is-vcentered\">\r\n        <div className=\"column is-8\">\r\n          <h1>Welcome Back: {name}</h1>\r\n        </div>\r\n        <div className=\"column is-right\">\r\n          <button\r\n            className=\"button is-primary is-pulled-right new-board-btn\"\r\n            onClick={(e) => {\r\n              e.preventDefault();\r\n              // if (isActive) toggleclassName();\r\n            }}\r\n          >\r\n            New Board\r\n          </button>\r\n        </div>\r\n      </div>\r\n\r\n      {/* <button onClick={getUsers} classNameName=\"button is-info\">Get Users</button>\r\n            <table classNameName=\"table is-striped is-fullwidth\">\r\n                <thead>\r\n                    <tr>\r\n                        <th>No</th>\r\n                        <th>Name</th>\r\n                        <th>Email</th>\r\n                    </tr>\r\n                </thead>\r\n                <tbody>\r\n                    {users.map((user, index) => (\r\n                        <tr key={user.id}>\r\n                            <td>{index + 1}</td>\r\n                            <td>{user.name}</td>\r\n                            <td>{user.email}</td>\r\n                        </tr>\r\n                    ))}\r\n\r\n                </tbody>\r\n            </table> */}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Dashboard;\r\n"]},"metadata":{},"sourceType":"module"}